pico-8 cartridge // http://www.pico-8.com
version 42
__lua__

COLOR = {
    BLACK = 0,
    DARK_BLUE = 1,
    DARK_PURPLE = 2,
    DARK_GREEN = 3,
    BROWN = 4,
    DARK_GRAY = 5,
    LIGHT_GRAY = 6,
    WHITE = 7,
    RED = 8,
    ORANGE = 9,
    YELLOW = 10,
    GREEN = 11,
    BLUE = 12,
    LAVENDER = 13,
    PINK = 14,
    LIGHT_PEACH = 15
}

local show_pallet = false

particles = {}

function rnd_foliage_sprite_index ()
    local min = 1
    local max = 9
    local sprite_index = flr(rnd(max - min + 1)) + min

    return sprite_index
end

function Rider (bounce_rate)
    -- defaults
    bounce_rate = bounce_rate or 0.1

    local rider = {}
    local is_bouncing = false

    local sprite_down_index = 48
    local sprite_up_index = 49

    local tick = 0

    function rider:update ()
        tick += 1
        if tick > 1000 then
            tick = 0
        end
    end

    function rider:draw (x, y)
        local bounce = flr((tick % 30 * bounce_rate) %2)
        local sprite_index = is_bouncing and sprite_up_index or sprite_down_index
        print("x: "..x, 10, 10, 7)
        spr(sprite_index + bounce, x, y)
    end


    return rider
end

rider = Rider(0.1)

function ReflectiveText ()
    local reflectiveText = {}
    local iterator = 0

    reflectiveText.update = function ()
        iterator += 1
        if iterator > 1000 then
            iterator = 0
        end
    end

    reflectiveText.draw = function (text, x, y)
        print(text, x, y, COLOR.WHITE)
        local base_offset = y + 6

        for i = 1, 6 do
            local even_odd_operator = i % 2 == 0 and -1 or 1
            local sin_x = flr(x + sin(iterator / 1000 * i * i) * i / 5 * even_odd_operator)

            clip(sin_x, base_offset + i - 1, 128, 1)
            print(text, sin_x, base_offset + i - (6 - i), COLOR.DARK_GRAY)
            clip()
        end
    end

    return reflectiveText
end


text = ReflectiveText()

function lerp (a, b, t)
    return a + (b - a) * t
end

local rainbow_colors = {
    COLOR.RED,
    COLOR.ORANGE,
    COLOR.YELLOW,
    COLOR.GREEN,
    COLOR.BLUE,
    COLOR.LAVENDER,
    COLOR.PINK
}
local angles = 0

function _update ()
    angles += 5
    text.update()
    rider.update()

    -- toggle pallet on click
    if btnp(4) then
        show_pallet = not show_pallet
    end
end

function _draw ()
    cls()

    rider.draw(10, 90)

    -- draw the sky as rain bow the origin is the center of the sun and each beam
    -- shoots out at a radial angle from the sun
    -- for i = 0, 32 do
    --     clip(0, i * 5, 128, 1)
    --     -- local color_to_draw = flr(#rainbow_colors / 32 * i) + 1
    --     -- rectfill(0, i * 1, 128, i * 1 + 1, rainbow_colors[color_to_draw])
        
    --     -- use lines
    --     local color_to_draw = flr(#rainbow_colors / 32 * i) + 1
    --     local arc = 128 + sin(angles / 100) * 64
    --     line(0, arc, 128, i * 4, rainbow_colors[color_to_draw])
    --     line(128, arc, 0, i * 4, rainbow_colors[color_to_draw])

    --     clip()
    -- end


    -- draw moon top right r ~ 8
    -- represent with 3 circles
    -- 1. white circle
    -- 2. light gray circle
    -- 3. dark gray circle
    circfill(110, 8, 8, COLOR.WHITE)
    circfill(110, 8, 7, COLOR.LIGHT_GRAY)
    circfill(110, 8, 6, COLOR.DARK_GRAY)


    -- draw a body of water
    rectfill(0, 64, 128, 128, COLOR.DARK_BLUE)
    text.draw("rAINBOW rIDERS", 20, 58)

    -- draw boarwalk in dark gray below the water as one big rect
    rectfill(0, 96, 128, 128, COLOR.DARK_GRAY)

    -- draw a color pallet of 4x4 across the top
    if show_pallet then
        draw_pallet()
    end
end

function draw_pallet ()
    for i = 0, 15 do
        rectfill(i * 8, 0, i * 8 + 8, 8, i)
        -- draw the color number
        print(i, i * 8 + 2, 10, 1)
    end
end

__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00001100000111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00011100000011100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00001110000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00001010000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00001010011111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01111110001000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00100010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
